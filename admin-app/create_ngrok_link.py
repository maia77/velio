#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุณูุฑูุจุช ุณุฑูุน ูุชุดุบูู ngrok ูุฅูุดุงุก ุฑุงุจุท ูููุตูู ุนู ุจุนุฏ
"""

import subprocess
import time
import requests
import json
import webbrowser

def start_ngrok():
    """ุชุดุบูู ngrok"""
    print("๐ ุจุฏุก ุชุดุบูู ngrok...")
    
    try:
        # ุชุดุบูู ngrok ูู ุงูุฎูููุฉ
        process = subprocess.Popen(
            ['ngrok', 'http', '5003'],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # ุงูุชุธุงุฑ ููููุงู ูุจุฏุก ngrok
        time.sleep(5)
        
        return process
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชุดุบูู ngrok: {e}")
        return None

def get_ngrok_url():
    """ุงูุญุตูู ุนูู ุฑุงุจุท ngrok"""
    try:
        response = requests.get('http://localhost:4040/api/tunnels', timeout=10)
        if response.status_code == 200:
            data = response.json()
            tunnels = data.get('tunnels', [])
            
            for tunnel in tunnels:
                if tunnel.get('proto') == 'https':
                    return tunnel['public_url']
        
        return None
    except:
        return None

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print("๐ ุฅูุดุงุก ุฑุงุจุท ngrok ูููุตูู ุนู ุจุนุฏ")
    print("=" * 50)
    
    # ุงูุชุญูู ูู ุชุดุบูู ุงูุชุทุจูู
    try:
        response = requests.get('http://127.0.0.1:5003/admin', timeout=5)
        if response.status_code == 200:
            print("โ ุงูุชุทุจูู ูุนูู ุจูุฌุงุญ")
        else:
            print("โ ุงูุชุทุจูู ูุง ูุนูู")
            return
    except:
        print("โ ุงูุชุทุจูู ุบูุฑ ูุดุบู")
        print("๐ ูุฑุฌู ุชุดุบูู ุงูุชุทุจูู ุฃููุงู: python3 app.py")
        return
    
    # ุชุดุบูู ngrok
    process = start_ngrok()
    if not process:
        return
    
    print("โณ ุงูุชุธุงุฑ ุฅูุดุงุก ุงูููู...")
    
    # ูุญุงููุฉ ุงูุญุตูู ุนูู ุงูุฑุงุจุท
    for i in range(10):
        url = get_ngrok_url()
        if url:
            print(f"\n๐ ุชู ุฅูุดุงุก ุงูุฑุงุจุท ุจูุฌุงุญ!")
            print("=" * 50)
            print(f"๐ ุงูุฑุงุจุท ุงูุนุงู: {url}")
            print(f"๐ง ููุญุฉ ุงูุชุญูู: {url}/admin")
            print(f"๐ฑ ุงูููุชุฌุงุช: {url}/view-products")
            print("=" * 50)
            print("๐ฑ ุดุงุฑู ูุฐุง ุงูุฑุงุจุท ูุน ุฃุตุฏูุงุฆู!")
            
            # ุญูุธ ุงูุฑุงุจุท ูู ููู
            with open('ngrok_url.txt', 'w', encoding='utf-8') as f:
                f.write(f"ุฑุงุจุท ngrok ูููุตูู ุนู ุจุนุฏ:\n")
                f.write(f"๐ ุงูุฑุงุจุท ุงูุนุงู: {url}\n")
                f.write(f"๐ง ููุญุฉ ุงูุชุญูู: {url}/admin\n")
                f.write(f"๐ฑ ุงูููุชุฌุงุช: {url}/view-products\n")
                f.write(f"โฐ ุชู ุฅูุดุงุคู ูู: {time.strftime('%Y-%m-%d %H:%M:%S')}\n")
            
            print(f"\n๐พ ุชู ุญูุธ ุงูุฑุงุจุท ูู ููู: ngrok_url.txt")
            
            # ูุชุญ ุงููุชุตูุญ
            browser_choice = input("\nูู ุชุฑูุฏ ูุชุญ ููุญุฉ ุงูุชุญูู ูู ุงููุชุตูุญุ (y/n): ").lower()
            if browser_choice == 'y':
                webbrowser.open(f"{url}/admin")
                print("๐ ุชู ูุชุญ ููุญุฉ ุงูุชุญูู ูู ุงููุชุตูุญ")
            
            print(f"\nโน๏ธ ูุฅููุงู ngrokุ ุงุถุบุท Ctrl+C")
            
            try:
                # ุงูุชุธุงุฑ ุญุชู ูุชู ุฅููุงู ุงูุจุฑูุงูุฌ
                process.wait()
            except KeyboardInterrupt:
                print("\n๐ ุฅููุงู ngrok...")
                process.terminate()
                process.wait()
                print("โ ุชู ุฅููุงู ngrok")
            
            return
        
        print(f"โณ ูุญุงููุฉ {i+1}/10...")
        time.sleep(2)
    
    print("โ ูุดู ูู ุฅูุดุงุก ุงูุฑุงุจุท")
    if process:
        process.terminate()
        process.wait()

if __name__ == "__main__":
    main() 